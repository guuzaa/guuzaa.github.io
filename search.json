[{"title":"博客搭建指南","url":"/2021/02/05/blog-building01/","content":"看本文之前，需要了解下面的内容：\n\nHexo 环境的配置，deploy 工具的下载，_config 文件的结构。\n基本的 git 操作。\n在 PC 生成 ssh 密钥对。\nGithub 和码云账号，以及开仓库和 Page 的方式。\n\n笔者一直有一个想法：利用 Hexo 和 Github Page 做一个静态博客。但是 Github Page 打开太慢，只好用国内的 Gitee Page 来做代替，但是 Gitee Page 不支持自动更新,每次写完文章需要手动更新。这很麻烦。所以我就想能不能用一些方法，在每次提交新文章的时候自动更新 Gitee Page。\n查阅了一些资料和动手实践了之后找到了解决办法。\n首先，简单总结自己的需求：\n\n利用 Hexo 和 Gitee Page 搭建一个静态博客。\n通过某种方法实现每次将 Hexo 部署到 Gitee 上后自动更新页面功能。\n备份自己的博客源文件。（非刚需）\n\n\n注：Gitee Pro 支持 Gitee Page 自动更新，但是需要付费。\n\n我的解决办法是通过 Github Action 来实现自动更新页面功能。用到的 Action 是 Gitee Pages Action。基于这个工具，我的需求很容易就得到解决。\n首先我创建一个 Github 仓库（称为甲）存放博客原文档和 Action，另一个仓库就是常规的 Github Page。然后我在码云里也开一个 Gitee Page 仓库。\n整个流程如下：\n\n将写好的博客源代码发布到仓库甲中。\n仓库甲中的 Action 监听 push 动作，一旦 push 就会触发 Action。Action 主要包括两步：\n部署静态博客（hexo deploy)到 Github Page 和 Gitee Page。 \n利用 Gitee Pages Action 更新 Gitee Page。\n\n\n\n下面我就按照这两步来展开。\n发布博客源代码到仓库涉及到一些比较常见的 git 操作，所以不再赘述。\nGithub Action 的编写代码: https://gist.github.com/guuzaa/700e5408209594f3621498a61d7c8ed9\n参考下面两篇文章中的「环境配置」部分。\n\nhttps://hdj.me/github-actions-hexo-cicd/虽然题目是部署，但是代码中却在生成静态博客，故我将hexo g改成 hexo d。\nhttps://blog.motreen.ml/posts/35722/ \n\n需要注意的是：\n\nhexo 的 _config 文件 deploy 中 git repo 的 URL 必须是 ssh 格式，因为 ssh 密钥对只能对这种格式的仓库免密码验证。\nGithub 和 Gitee 的 ssh 密钥对必须是一个。\nGithub Action 中的代码本质就是替代了我们人为的操作，包括：部署 hexo 静态页面到 Github 和码云中；更新码云页面。\nGitee Pages Action 需要登录码云账号，所以会收到在美国异地登录的提醒。\n每次生成的静态页面都是强制推送的，也就是说每次推送都会抹掉之前的数据。我们有源代码的备份，所以勉强可以接受。\n\n最终效果\nGithub\n\n码云\n\n\n","tags":["Blog"]},{"title":"跟我一起学 scp","url":"/2021/03/06/learning-scp/","content":"摘要我经常需要在 PC 和 Linux（远程服务器）之间传输文件。\n之前，我的方法是使用 MobaXterm，一种图形化的方式。尽管操作直观，可是在传输的文件比较大，传输时间比较长的情况下，MobaXterm 就会出现断开连接的问题。\n为了解决上面的问题，本文介绍了使用 scp 命令行的方法，它能够实现在两台电脑之间安全传输文件的效果。\n命令介绍scp 是 secure copy 的缩写。它是 ssh 提供的一个程序，主要用来在两台电脑之间安全传输文件。\n基本语法与 cp 命令类似。\nscp source destination\n其中 source 和 destination 分别表示文件源地址和目的地址。它们可以同时包含主机名，换句话说，scp 可以在两台远程主机间传输文件。\nscp foo.txt usr@host:files/\n上面的命令表示将 foo.txt 传输到 host 主机 usr 用户目录中 files 文件夹下。需要注意的是，主机与文件之间要加冒号，host 表示 IP 地址，usr 表示用户名。\n当在终端里面输入上面的命令之后，scp 会先用 ssh 登录到远程主机，因此，会提示我们输入密码。因为用的是 ssh 登录远程主机，所以这部分的操作与 ssh 大致相同。如果事先在 .ssh/config 配置文件里设置好了远程主机的别名，那么这里可以不用输入 usr@host，只输入别名即可。\n同样的道理，如果在两台远程主机传输文件，那么会提示输入两个密码。\n除此之外，如果远程主机 ssh 的端口不是默认的 22，那么可以用过 -P 端口号 来指定端口。\nscp -P 1234 foo.txt usr@host:files/\n延伸阅读网道 scp 介绍\n","categories":["linux"]}]